{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"AAoFA;;;;;;GAMG;AACH,MAAM,CAAN,IAAY,eAiBX;AAjBD,WAAY,eAAe;IACzB;;;;;;OAMG;IACH,qDAAQ,CAAA;IACR;;;;;;OAMG;IACH,6DAAY,CAAA;AACd,CAAC,EAjBW,eAAe,KAAf,eAAe,QAiB1B;AAED;;;;;;GAMG;AACH,MAAM,CAAN,IAAY,YAeX;AAfD,WAAY,YAAY;IACtB;;;;;OAKG;IACH,+CAAQ,CAAA;IACR;;;;;OAKG;IACH,6CAAO,CAAA;AACT,CAAC,EAfW,YAAY,KAAZ,YAAY,QAevB;AAED;;;;;;GAMG;AACH,MAAM,CAAN,IAAY,WAgBX;AAhBD,WAAY,WAAW;IACrB;;;;;OAKG;IACH,6CAAQ,CAAA;IACR;;;;;;OAMG;IACH,2CAAO,CAAA;AACT,CAAC,EAhBW,WAAW,KAAX,WAAW,QAgBtB;AAED;;;;;;GAMG;AACH,MAAM,CAAN,IAAY,kBAeX;AAfD,WAAY,kBAAkB;IAC5B;;;;;OAKG;IACH,2DAAQ,CAAA;IACR;;;;;OAKG;IACH,yDAAO,CAAA;AACT,CAAC,EAfW,kBAAkB,KAAlB,kBAAkB,QAe7B;AAqKD;;;;;GAKG;AACH,MAAM,CAAN,IAAY,YA+DX;AA/DD,WAAY,YAAY;IACtB;;;;OAIG;IACH,6DAAe,CAAA;IACf;;;;;OAKG;IACH,yDAAa,CAAA;IACb;;;;OAIG;IACH,qDAAW,CAAA;IACX;;;;OAIG;IACH,qDAAW,CAAA;IACX;;;;OAIG;IACH,yDAAa,CAAA;IACb;;;;OAIG;IACH,uDAAY,CAAA;IACZ;;;;;OAKG;IACH,2DAAc,CAAA;IACd;;;;OAIG;IACH,uDAAY,CAAA;IACZ;;;;OAIG;IACH,wDAAa,CAAA;IACb;;;;OAIG;IACH,4DAAe,CAAA;AACjB,CAAC,EA/DW,YAAY,KAAZ,YAAY,QA+DvB;AAED;;;;;GAKG;AACH,MAAM,CAAN,IAAY,WA2FX;AA3FD,WAAY,WAAW;IACrB;;;;OAIG;IACH,6CAAQ,CAAA;IACR;;;;OAIG;IACH,iEAAkB,CAAA;IAClB;;;;OAIG;IACH,uEAAqB,CAAA;IACrB;;;;OAIG;IACH,mEAAmB,CAAA;IACnB;;;;OAIG;IACH,yEAAsB,CAAA;IACtB;;;;OAIG;IACH,mDAAW,CAAA;IACX;;;;OAIG;IACH,qDAAY,CAAA;IACZ;;;;OAIG;IACH,2DAAe,CAAA;IACf;;;;OAIG;IACH,iEAAkB,CAAA;IAClB;;;;OAIG;IACH,4DAAgB,CAAA;IAChB;;;;OAIG;IACH,kEAAmB,CAAA;IACnB;;;;OAIG;IACH,0DAAe,CAAA;IACf;;;;OAIG;IACH,0DAAe,CAAA;IACf;;;;OAIG;IACH,wDAAc,CAAA;IACd;;;;OAIG;IACH,0DAAe,CAAA;AACjB,CAAC,EA3FW,WAAW,KAAX,WAAW,QA2FtB","sourcesContent":["export interface FaceDetectionPlugin {\n  /**\n   * Detects human faces from the supplied image.\n   *\n   * Only available on Android and iOS.\n   *\n   * @since 5.1.0\n   */\n  processImage(options: ProcessImageOptions): Promise<ProcessImageResult>;\n}\n\n/**\n * @since 5.1.0\n */\nexport interface ProcessImageOptions {\n  /**\n   * The local path to the image file.\n   *\n   * @since 5.1.0\n   */\n  path: string;\n  /**\n   * Defines options to control accuracy / speed trade-offs in performing face detection.\n   *\n   * @since 5.1.0\n   * @default PerformanceMode.Fast\n   * @see https://developers.google.com/android/reference/com/google/mlkit/vision/face/FaceDetectorOptions.PerformanceMode\n   */\n  performanceMode?: PerformanceMode;\n  /**\n   * Defines options to enable face landmarks or not.\n   *\n   * @since 5.1.0\n   * @default LandmarkMode.None\n   * @see https://developers.google.com/android/reference/com/google/mlkit/vision/face/FaceDetectorOptions.LandmarkMode\n   */\n  landmarkMode?: LandmarkMode;\n  /**\n   * Defines options to enable face contours or not.\n   *\n   * @since 5.1.0\n   * @default ContourMode.None\n   * @see https://developers.google.com/android/reference/com/google/mlkit/vision/face/FaceDetectorOptions.ContourMode\n   */\n  contourMode?: ContourMode;\n  /**\n   * Defines options for characterizing attributes such as \"smiling\" * and \"eyes open\".\n   *\n   * @since 5.1.0\n   * @default ClassificationMode.None\n   * @see https://developers.google.com/android/reference/com/google/mlkit/vision/face/FaceDetectorOptions.ClassificationMode\n   */\n  classificationMode?: ClassificationMode;\n  /**\n   * Sets the smallest desired face size, expressed as a proportion of the width of the head to the image width.\n   *\n   * @since 5.1.0\n   * @default 0.1\n   * @see https://developers.google.com/android/reference/com/google/mlkit/vision/face/FaceDetectorOptions.Builder#public-facedetectoroptions.builder-setminfacesize-float-minfacesize\n   */\n  minFaceSize?: number;\n  /**\n   * Enables face tracking, which will maintain a consistent ID for each face when processing consecutive frames.\n   * Tracking should be disabled for handling a series of non-consecutive still images.\n   *\n   * @since 5.1.0\n   * @default false\n   * @see https://developers.google.com/android/reference/com/google/mlkit/vision/face/FaceDetectorOptions.Builder#public-facedetectoroptions.builder-enabletracking\n   */\n  enableTracking?: boolean;\n}\n\n/**\n * @since 5.1.0\n */\nexport interface ProcessImageResult {\n  /**\n   * The detected faces.\n   *\n   * @since 5.1.0\n   */\n  faces: Face[];\n}\n\n/**\n * Defines options to control accuracy / speed trade-offs in performing face detection.\n * In general, choosing the more accurate mode will generally result in longer runtime, whereas choosing the faster mode will generally result in detecting fewer faces.\n *\n * @since 5.1.0\n * @see https://developers.google.com/android/reference/com/google/mlkit/vision/face/FaceDetectorOptions.PerformanceMode\n */\nexport enum PerformanceMode {\n  /**\n   * Indicates a preference for speed in the options that may make an accuracy vs. speed trade-off.\n   * This will tend to detect fewer faces and may be less precise in determining values such as position, but will run faster.\n   *\n   * @since 5.1.0\n   * @see https://developers.google.com/android/reference/com/google/mlkit/vision/face/FaceDetectorOptions#PERFORMANCE_MODE_FAST\n   */\n  Fast = 1,\n  /**\n   * Indicates a preference for accuracy in the options that may make an accuracy vs. speed trade-off.\n   * This will tend to detect more faces and may be more precise in determining values such as position, at the cost of speed.\n   *\n   * @since 5.1.0\n   * @see https://developers.google.com/android/reference/com/google/mlkit/vision/face/FaceDetectorOptions#public-static-final-int-performance_mode_accurate\n   */\n  Accurate = 2,\n}\n\n/**\n * Defines options to enable face landmarks or not.\n * Processing time increases as the extra face landmark to search.\n *\n * @since 5.1.0\n * @see https://developers.google.com/android/reference/com/google/mlkit/vision/face/FaceDetectorOptions.LandmarkMode\n */\nexport enum LandmarkMode {\n  /**\n   * Does not perform landmark detection.\n   *\n   * @since 5.1.0\n   * @see https://developers.google.com/android/reference/com/google/mlkit/vision/face/FaceDetectorOptions#public-static-final-int-landmark_mode_none\n   */\n  None = 1,\n  /**\n   * Detects FaceLandmark for a given face.\n   *\n   * @since 5.1.0\n   * @see https://developers.google.com/android/reference/com/google/mlkit/vision/face/FaceDetectorOptions#public-static-final-int-landmark_mode_all\n   */\n  All = 2,\n}\n\n/**\n * Defines options to enable face contours or not.\n * Processing time increases as the number of contours to search.\n *\n * @since 5.1.0\n * @see https://developers.google.com/android/reference/com/google/mlkit/vision/face/FaceDetectorOptions.ContourMode\n */\nexport enum ContourMode {\n  /**\n   * Does not perform contour detection.\n   *\n   * @since 5.1.0\n   * @see https://developers.google.com/android/reference/com/google/mlkit/vision/face/FaceDetectorOptions#public-static-final-int-contour_mode_none\n   */\n  None = 1,\n  /**\n   * Detects FaceContour for a given face.\n   * Note that it would return contours for up to 5 faces\n   *\n   * @since 5.1.0\n   * @see https://developers.google.com/android/reference/com/google/mlkit/vision/face/FaceDetectorOptions#public-static-final-int-contour_mode_all\n   */\n  All = 2,\n}\n\n/**\n * Defines options for characterizing attributes such as \"smiling\" and \"eyes open\".\n * Processing time increases as extra classification to search.\n *\n * @since 5.1.0\n * @see https://developers.google.com/android/reference/com/google/mlkit/vision/face/FaceDetectorOptions.ClassificationMode\n */\nexport enum ClassificationMode {\n  /**\n   * Does not perform classification.\n   *\n   * @since 5.1.0\n   * @see https://developers.google.com/android/reference/com/google/mlkit/vision/face/FaceDetectorOptions#public-static-final-int-classification_mode_none\n   */\n  None = 1,\n  /**\n   * Performs \"eyes open\" and \"smiling\" classification.\n   *\n   * @since 5.1.0\n   * @see https://developers.google.com/android/reference/com/google/mlkit/vision/face/FaceDetectorOptions#public-static-final-int-classification_mode_all\n   */\n  All = 2,\n}\n\n/**\n * Represents a face detected by `FaceDetector`.\n *\n * @since 5.1.0\n * @see https://developers.google.com/android/reference/com/google/mlkit/vision/face/Face\n */\nexport interface Face {\n  /**\n   * Returns the axis-aligned bounding rectangle of the detected face.\n   *\n   * @since 5.1.0\n   */\n  bounds: Rect;\n\n  /**\n   * Returns a list of face landmarks.\n   *\n   * @since 5.1.0\n   */\n  landmarks?: FaceLandmark[];\n  /**\n   * Returns a list of face contours.\n   *\n   * @since 5.1.0\n   */\n  contours?: FaceContour[];\n\n  /**\n   * Returns the tracking ID if the tracking is enabled.\n   *\n   * @since 5.1.0\n   */\n  trackingId?: number;\n\n  /**\n   * Returns the rotation of the face about the horizontal axis of the image.\n   * Positive euler X is the face is looking up.\n   *\n   * @since 5.1.0\n   */\n  headEulerAngleX: number;\n  /**\n   * Returns the rotation of the face about the vertical axis of the image.\n   * Positive euler y is when the face turns toward the right side of the image that is being processed.\n   *\n   * @since 5.1.0\n   */\n  headEulerAngleY: number;\n  /**\n   * Returns the rotation of the face about the axis pointing out of the image.\n   * Positive euler z is a counter-clockwise rotation within the image plane.\n   *\n   * @since 5.1.0\n   */\n  headEulerAngleZ: number;\n\n  /**\n   * Returns a value between 0.0 and 1.0 giving a probability that the face is smiling.\n   *\n   * @since 5.1.0\n   */\n  smilingProbability?: number;\n  /**\n   * Returns a value between 0.0 and 1.0 giving a probability that the face's left eye is open.\n   *\n   * @since 5.1.0\n   */\n  leftEyeOpenProbability?: number;\n  /**\n   * Returns a value between 0.0 and 1.0 giving a probability that the face's right eye is open.\n   *\n   * @since 5.1.0\n   */\n  rightEyeOpenProbability?: number;\n}\n\n/**\n * Rect holds four integer coordinates for a rectangle.\n *\n * @since 5.1.0\n * @see https://developer.android.com/reference/android/graphics/Rect.html\n */\nexport interface Rect {\n  /**\n   * The X coordinate of the left side of the rectangle.\n   *\n   * @since 5.1.0\n   */\n  left: number;\n  /**\n   * The Y coordinate of the top of the rectangle.\n   *\n   * @since 5.1.0\n   */\n  top: number;\n  /**\n   * The X coordinate of the right side of the rectangle.\n   *\n   * @since 5.1.0\n   */\n  right: number;\n  /**\n   * The Y coordinate of the bottom of the rectangle.\n   *\n   * @since 5.1.0\n   */\n  bottom: number;\n}\n\n/**\n * Represent a face landmark.\n * A landmark is a point on a detected face, such as an eye, nose, or mouth.\n *\n * @since 5.1.0\n * @see https://developers.google.com/android/reference/com/google/mlkit/vision/face/FaceLandmark\n */\nexport interface FaceLandmark {\n  /**\n   * Gets the FaceLandmark.LandmarkType type.\n   *\n   * @since 5.1.0\n   */\n  type: LandmarkType;\n  /**\n   * Gets a 2D point for landmark position, where (0, 0) is the upper-left corner of the image.\n   *\n   * @since 5.1.0\n   */\n  position: Point;\n}\n\n/**\n * Represent a face contour.\n * A contour is a list of points on a detected face, such as the mouth.\n *\n * @since 5.1.0\n * @see https://developers.google.com/android/reference/com/google/mlkit/vision/face/FaceContour\n */\nexport interface FaceContour {\n  /**\n   * Gets the FaceContour.ContourType type.\n   *\n   * @since 5.1.0\n   */\n  type: ContourType;\n  /**\n   * Gets a list of 2D points for this face contour, where (0, 0) is the upper-left corner of the image.\n   *\n   * @since 5.1.0\n   */\n  points: Point[];\n}\n\n/**\n * Point holds two coordinates\n *\n * @since 5.1.0\n */\nexport interface Point {\n  x: number;\n  y: number;\n}\n\n/**\n * Landmark types for face.\n *\n * @since 5.1.0\n * @see https://developers.google.com/android/reference/com/google/mlkit/vision/face/FaceLandmark.LandmarkType\n */\nexport enum LandmarkType {\n  /**\n   * The center of the subject's bottom lip.\n   *\n   * @since 5.1.0\n   */\n  MouthBottom = 0,\n  /**\n   * The midpoint between the subject's left mouth corner and the outer corner of the subject's left eye.\n   * For full profile faces, this becomes the centroid of the nose base, nose tip, left ear lobe and left ear tip.\n   *\n   * @since 5.1.0\n   */\n  LeftCheek = 1,\n  /**\n   * The midpoint of the subject's left ear tip and left ear lobe.\n   *\n   * @since 5.1.0\n   */\n  LeftEar = 3,\n  /**\n   * The center of the subject's left eye cavity.\n   *\n   * @since 5.1.0\n   */\n  LeftEye = 4,\n  /**\n   * The subject's left mouth corner where the lips meet.\n   *\n   * @since 5.1.0\n   */\n  MouthLeft = 5,\n  /**\n   * The midpoint between the subject's nostrils where the nose meets the face.\n   *\n   * @since 5.1.0\n   */\n  NoseBase = 6,\n  /**\n   * The midpoint between the subject's right mouth corner and the outer corner of the subject's right eye.\n   * For full profile faces, this becomes the centroid of the nose base, nose tip, right ear lobe and right ear tip.\n   *\n   * @since 5.1.0\n   */\n  RightCheek = 7,\n  /**\n   * The midpoint of the subject's right ear tip and right ear lobe.\n   *\n   * @since 5.1.0\n   */\n  RightEar = 9,\n  /**\n   * The center of the subject's right eye cavity.\n   *\n   * @since 5.1.0\n   */\n  RightEye = 10,\n  /**\n   * The subject's right mouth corner where the lips meet.\n   *\n   * @since 5.1.0\n   */\n  MouthRight = 11,\n}\n\n/**\n * Contour types for face.\n *\n * @since 5.1.0\n * @see https://developers.google.com/android/reference/com/google/mlkit/vision/face/FaceContour.ContourType\n */\nexport enum ContourType {\n  /**\n   * The outline of the subject's face.\n   *\n   * @since 5.1.0\n   */\n  Face = 1,\n  /**\n   * The top outline of the subject's left eyebrow.\n   *\n   * @since 5.1.0\n   */\n  LeftEyebrowTop = 2,\n  /**\n   * The bottom outline of the subject's left eyebrow.\n   *\n   * @since 5.1.0\n   */\n  LeftEyebrowBottom = 3,\n  /**\n   * The top outline of the subject's right eyebrow.\n   *\n   * @since 5.1.0\n   */\n  RightEyebrowTop = 4,\n  /**\n   * The bottom outline of the subject's right eyebrow.\n   *\n   * @since 5.1.0\n   */\n  RightEyebrowBottom = 5,\n  /**\n   * The outline of the subject's left eye cavity.\n   *\n   * @since 5.1.0\n   */\n  LeftEye = 6,\n  /**\n   * The outline of the subject's right eye cavity.\n   *\n   * @since 5.1.0\n   */\n  RightEye = 7,\n  /**\n   * The top outline of the subject's upper lip.\n   *\n   * @since 5.1.0\n   */\n  UpperLipTop = 8,\n  /**\n   * The bottom outline of the subject's upper lip.\n   *\n   * @since 5.1.0\n   */\n  UpperLipBottom = 9,\n  /**\n   * The top outline of the subject's lower lip.\n   *\n   * @since 5.1.0\n   */\n  LowerLipTop = 10,\n  /**\n   * The bottom outline of the subject's lower lip.\n   *\n   * @since 5.1.0\n   */\n  LowerLipBottom = 11,\n  /**\n   * The outline of the subject's nose bridge.\n   *\n   * @since 5.1.0\n   */\n  NoseBridge = 12,\n  /**\n   * The outline of the subject's nose bridge.\n   *\n   * @since 5.1.0\n   */\n  NoseBottom = 13,\n  /**\n   * The center of the left cheek.\n   *\n   * @since 5.1.0\n   */\n  LeftCheek = 14,\n  /**\n   * The center of the right cheek.\n   *\n   * @since 5.1.0\n   */\n  RightCheek = 15,\n}\n"]}